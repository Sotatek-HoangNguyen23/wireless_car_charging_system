@page
@model wireless_changing_system.Pages.Wireless_charging.Vehicles.ChargingHistoryModel
@{
    <div class="container py-4">
        <h1 class="mb-4">Charging History</h1>
        <div class="mb-4">
            <h3>VF 9 ECO</h3>
            <p class="text-muted">License plate: 30E-777.96</p>
        </div>


        <div class="mb-4">
            <h4> <i class="bi bi-calendar-event"></i> From - To</h4>
            <div class="d-flex gap-2">
                <input type="date" id="startDate" class="form-control" style="max-width: 180px;" />
                <input type="date" id="endDate" class="form-control" style="max-width: 180px;" />
            </div>
        </div>

        <div class="mb-4">
            <h4><i class="bi bi-ev-station"></i> Station</h4>
            <select class="form-select">
                <option selected>Choose a Station</option>
                <option value="1">Hoa Lac Station</option>
                <option value="2">Cau Giay Station</option>
            </select>
        </div>

        

        <div class="list-group">
            <!--<div class="list-group-item mb-3">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5>6:00 - 7:30 Mon 10/2/2025</h5>
                        <p class="mb-0">Amount: 50.05$</p>
                        <p class="mb-0">● Hoa Lac Station, Hoa Lac, Thach That, Ha Noi</p>
                    </div>
                </div>
            </div>
            -->
            
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            const carId = getCarIdFromUrl(); 
            if (!carId) {
                console.error("Car ID is missing.");
                return;
            }

            await fetchChargingHistory(carId);

            //onchange
            document.getElementById("startDate").addEventListener("change", () => filterChargingHistory(carId));
            document.getElementById("endDate").addEventListener("change", () => filterChargingHistory(carId));
        });

        function getCarIdFromUrl() {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get('carId');
        }

        //api get list
        async function fetchChargingHistory(carId) {
            try {
                const response = await fetch(`https://localhost:7191/api/Car/charging-history?carId=${carId}`);

                if (response.status === 404) {
                    displayNotFound();
                    return;
                }

                if (!response.ok) throw new Error(`API Error: ${response.statusText}`);

                const history = await response.json();
                displayChargingHistory(history);
            } catch (error) {
                console.error("Error fetching charging history:", error);
                displayNotFound(); 
            }
        }

        function displayNotFound() {
            const container = document.querySelector(".list-group");
            container.innerHTML = `<div class="fs-3">Not found</div>`;
        }

        function displayChargingHistory(history) {
            const container = document.querySelector(".list-group");
            container.innerHTML = ""; 

            if (history.length === 0) {
                container.innerHTML = `<p class="text-muted">No charging history found.</p>`;
                return;
            }

            history.forEach(session => {
                const sessionCard = `
                    <div class="list-group-item mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5>${formatTime(session.startTime)} - ${session.endTime ? formatTime(session.endTime) : "Charging..."}</h5>
                                <p class="mb-0">Amount: ${session.cost}$</p>
                                <p class="mb-0"><i class="bi bi-geo-alt"></i> ${session.stationName}, ${session.address}</p>
                            </div>

                            <span class="badge ${session.status === "Done" ? "bg-success" : "bg-primary"}">${session.status}</span>
                        </div>
                    </div>
                `;
                container.insertAdjacentHTML("beforeend", sessionCard);
            });
        }

        async function filterChargingHistory(carId) {
            const startDate = document.getElementById("startDate").value;
            const endDate = document.getElementById("endDate").value;

            try {
                const response = await fetch(
                    `https://localhost:7191/api/Car/charging-history?carId=${carId}&start=${startDate}&end=${endDate}`
                );

                if (response.status === 404) {
                    displayNotFound();
                    return;
                }

                if (!response.ok) throw new Error(`API Error: ${response.statusText}`);

                const history = await response.json();
                displayChargingHistory(history);
            } catch (error) {
                console.error("Error filtering charging history:", error);
                displayNotFound(); 
            }
        }

        //format
        function formatTime(dateTimeString) {
            const date = new Date(dateTimeString);
            return date.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }) + " " + date.toLocaleDateString();
        }
    </script>
}

