@page
@model wireless_changing_system.Pages.Wireless_charging.Vehicles.ChargingHistoryModel
@{
    <div class="container py-4">
        <h1 class="mb-4">Charging History</h1>
        <div class="mb-4">
            <h3>VF 9 ECO</h3>
            <p class="text-muted">License plate: 30E-777.96</p>
        </div>

        <div class="mb-4">
            <h4> <i class="bi bi-calendar-event"></i> From - To</h4>
            <div class="d-flex gap-2">
                <input type="date" id="startDate" class="form-control" style="max-width: 180px;" />
                <input type="date" id="endDate" class="form-control" style="max-width: 180px;" />
            </div>
        </div>

        <div class="mb-4">
            <h4><i class="bi bi-ev-station"></i> Station</h4>
            <select class="form-select" id="stationSelect">
                <option selected>Choose a Station</option>
            </select>
        </div>

        <div class="list-group">
        </div>
    </div>

    
}
<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const carId = getCarIdFromUrl();
        if (!carId) {
            console.error("Car ID is missing.");
            return;
        }

        await fetchChargingHistory(carId);

        document.getElementById("startDate").addEventListener("change", () => filterChargingHistory(carId));
        document.getElementById("endDate").addEventListener("change", () => filterChargingHistory(carId));
        document.getElementById("stationSelect").addEventListener("change", () => filterChargingHistory(carId));
    });

    function getCarIdFromUrl() {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('carId');
    }

    async function fetchChargingHistory(carId) {
        try {
            const response = await fetch(`https://localhost:7191/api/Car/charging-history?carId=${carId}`);

            if (response.status === 404) {
                displayNotFound();
                return;
            }

            if (!response.ok) throw new Error(`API Error: ${response.statusText}`);

            const history = await response.json();
            displayChargingHistory(history);
        } catch (error) {
            console.error("Error fetching charging history:", error);
            displayNotFound();
        }
    }

    fetch('https://localhost:7191/api/ChargingStation')
        .then(response => response.json())
        .then(data => {
            const selectElement = document.getElementById('stationSelect');
            selectElement.innerHTML = '<option selected>Choose a Station</option>';
            data.data.forEach(station => {
                const option = document.createElement('option');
                option.value = station.stationId;
                option.textContent = station.stationName;
                selectElement.appendChild(option);
            });
        })
        .catch(error => console.error('Error loading data:', error));

    function displayNotFound() {
        const container = document.querySelector(".list-group");
        container.innerHTML = `<div class="fs-3">There's no charging session <i class="bi bi-emoji-frown"></i></div>`;
    }

    function displayChargingHistory(history) {
        const container = document.querySelector(".list-group");
        container.innerHTML = "";

        if (history.length === 0) {
            container.innerHTML = `<p class="text-muted">No charging history found.</p>`;
            return;
        }

        history.forEach(session => {
            const sessionCard = `
                <div class="list-group-item mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5>${formatTime(session.startTime)} - ${session.endTime ? formatTime(session.endTime) : "Charging..."}</h5>
                            <p class="mb-0">Amount: ${session.cost}$</p>
                            <p class="mb-0"><i class="bi bi-geo-alt"></i> ${session.stationName}, ${session.address}</p>
                        </div>
                        <span class="badge ${session.status === "Done" ? "bg-success" : "bg-primary"}">${session.status}</span>
                    </div>
                </div>
            `;
            container.insertAdjacentHTML("beforeend", sessionCard);
        });
    }

    async function filterChargingHistory(carId) {
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;
        const stationSelect = document.getElementById("stationSelect");
        const selectedStationId = stationSelect.value;

        try {
            let url = `https://localhost:7191/api/Car/charging-history?carId=${carId}`;

            if (startDate) url += `&start=${startDate}`;
            if (endDate) url += `&end=${endDate}`;
            if (selectedStationId && selectedStationId !== "Choose a Station") {
                url += `&chargingStationId=${selectedStationId}`;
            }

            const response = await fetch(url);

            if (response.status === 404) {
                displayNotFound();
                return;
            }

            if (!response.ok) throw new Error(`API Error: ${response.statusText}`);

            const history = await response.json();
            displayChargingHistory(history);
        } catch (error) {
            console.error("Error filtering charging history:", error);
            displayNotFound();
        }
    }

    function formatTime(dateTimeString) {
        const date = new Date(dateTimeString);
        return date.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }) + " " + date.toLocaleDateString();
    }
</script>