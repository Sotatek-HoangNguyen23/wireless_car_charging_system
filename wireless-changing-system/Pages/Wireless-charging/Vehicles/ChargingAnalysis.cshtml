@page
@model wireless_changing_system.Pages.Wireless_charging.Vehicles.ChargingAnalysisModel
@{
    Layout = "_Layout";
}

<div class="container py-4">
    <!-- Header Section -->
    <div class="d-flex align-items-center mb-4">
        <h1 class="mb-0 text-black">Theo dõi sạc</h1>
        <div class="mx-5 d-flex align-items-center">
            <h3 id="noti" class="me-3 mb-0"></h3>
            <button id="retry-btn" class="btn btn-primary d-none">Xem lịch sử sạc</button>
        </div>
    </div>

    <!-- Main Card -->
    <div class="card shadow-lg">
        <div class="card-body">
            <!-- Vehicle Info -->
            <div class="row align-items-center mb-4">
                <div class="col-md-6">
                    <div class="d-flex align-items-center justify-content-between mb-3">
                        <h2 class="text-black mb-0">
                            <i class="bi bi-car-front me-2"></i>VF 9 Eco
                            <span class="badge bg-success ms-2" id="status">Đang cập nhật...</span>
                        </h2>
                        <div class="license-plate px-3 py-1 rounded fs-5">
                            Biển số xe: <br />
                            <span class="fw-bold">301 - 567.89</span>
                        </div>
                    </div>

                    <div class="battery-status mb-4 d-flex flex-column">
                        <div class="d-flex align-items-center mb-2 text-black">
                            <i class="bi bi-battery-charging me-2 fs-1"></i>
                            <span>% Pin hiện tại</span>
                        </div>
                        <div class="progress" style="height: 25px; width: 80%;">
                            <div class="progress-bar" id="battery-progress"
                                 role="progressbar" style="width: 0%"
                                 aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                Đang cập nhật...
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="station-info">
                        <h3 class="text-black mb-3">
                            <i class="bi bi-ev-station me-2 text-primary"></i>
                            <span id="station-name">Đang cập nhật...</span>
                        </h3>
                        <div class="address-card bg-light p-3 rounded">
                            <i class="bi bi-geo-alt-fill text-danger me-2"></i>
                            <span class="text-secondary" id="station-address">Đang cập nhật...</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Metrics Grid -->
            <div class="row g-4">
                <div class="col-lg-3 col-md-6">
                    <div class="metric-card p-3 bg-light rounded">
                        <i class="bi bi-lightning-charge fs-1 text-warning mb-2"></i>
                        <h5 class="text-muted">Công suất</h5>
                        <h2 class="text-black" id="charging-power">Đang cập nhật...</h2>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="metric-card p-3 bg-light rounded">
                        <i class="bi bi-thermometer-sun fs-1 text-danger mb-2"></i>
                        <h5 class="text-muted">Nhiệt độ</h5>
                        <h2 class="text-black" id="temperature">Đang cập nhật...</h2>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="metric-card p-3 bg-light rounded">
                        <i class="bi bi-speedometer2 fs-1 text-primary mb-2"></i>
                        <h5 class="text-muted">Dòng điện</h5>
                        <h2 class="text-black" id="current">Đang cập nhật...</h2>
                    </div>
                </div>
                <div class="col-lg-3 col-md-6">
                    <div class="metric-card p-3 bg-light rounded">
                        <i class="bi bi-cash-coin fs-1 text-success mb-2"></i>
                        <h5 class="text-muted">Giá tiền</h5>
                        <h2 class="text-black" id="cost">Đang cập nhật...</h2>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-center mt-3">
                <button class="btn btn-primary">Xem chi tiết</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Hiển thị Thông tin Phiên Sạc -->
<div class="modal fade" id="sessionModal" tabindex="-1" aria-labelledby="sessionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Phiên sạc đã hoàn tất</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <p><strong>Thời gian bắt đầu:</strong> <span id="modal-start-time"></span></p>
                <p><strong>Thời gian kết thúc:</strong> <span id="modal-end-time"></span></p>
                <p><strong>Năng lượng tiêu thụ:</strong> <span id="modal-energy"></span> kWh</p>
                <p><strong>Chi phí:</strong> <span id="modal-cost"></span></p>
            </div>
            <div class="d-flex justify-content-center mb-3">
                <button class="btn btn-primary mx-2">Xem lịch sử sạc</button>
                <button class="btn btn-primary mx-2">Về trang chủ</button>
            </div>

        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<script type="module">
    import { fetchWithAuth } from '/js/apiClient.js';

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("https://localhost:7191/realtimeHub")
        .build();

    connection.start().then(() => {
        console.log("Connected to SignalR hub");
    }).catch(err => console.error("SignalR error:", err));

    connection.onclose(async () => {
        console.warn("SignalR mất kết nối. Thử lại sau 5s...");
        setTimeout(() => {
            connection.start().catch(err => console.error("Kết nối lại thất bại:", err));
        }, 5000);
    });

    connection.on("ReceiveUpdate", () => updateChargingData());

    let sessionAlreadySaved = false;

    async function updateChargingData() {
        try {
            const urlParams = new URLSearchParams(window.location.search);
            const carId = urlParams.get('carId');
            if (!carId) return;

            const res = await fetchWithAuth(`https://localhost:7191/api/Car/real-time-status/${carId}`);
            if (!res.ok) throw new Error("Lỗi API trạng thái");

            const data = await res.json();

            const statusElement = document.getElementById('status');
            const batteryProgress = document.getElementById('battery-progress');

            if (data.status === "Charging") {
                sessionAlreadySaved = false;
                statusElement.textContent = "Đang sạc";
                statusElement.className = "badge bg-success ms-2";

                document.getElementById('charging-power').textContent = `${data.chargingPower}W`;
                document.getElementById('temperature').textContent = `${data.temperature}°C`;
                document.getElementById('current').textContent = `${data.current}A`;
                document.getElementById('cost').textContent = new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                }).format(data.cost * 1000);

                const batteryPercent = Math.round(data.batteryLevel);
                batteryProgress.style.width = `${batteryPercent}%`;
                batteryProgress.textContent = `${batteryPercent}%`;
                batteryProgress.className = "progress-bar";
                if (batteryPercent <= 20) batteryProgress.classList.add("bg-danger");
                else if (batteryPercent <= 40) batteryProgress.classList.add("bg-warning");
                else batteryProgress.classList.add("bg-success");
            }
                else if (data.status === "Disconnected" && !sessionAlreadySaved) {
        statusElement.textContent = "Mất kết nối";
        statusElement.className = "badge bg-secondary ms-2";

        batteryProgress.style.width = "0%";
        batteryProgress.textContent = "Không có dữ liệu";
        batteryProgress.className = "progress-bar bg-secondary";

        document.getElementById('charging-power').textContent = "0W";
        document.getElementById('temperature').textContent = "0°C";
        document.getElementById('current').textContent = "0A";
        document.getElementById('cost').textContent = "0 VND";

        // Kiểm tra nếu session đã được lưu trong localStorage
        const sessionKey = `sessionSaved_${data.carId}`;
        if (localStorage.getItem(sessionKey)) {
            // Nếu đã lưu session, không gửi lại yêu cầu API
            console.log("Session đã được lưu trước đó.");
            return;
        }

        // Gửi yêu cầu lưu session
        const sessionResponse = await fetchWithAuth('https://localhost:7191/api/Car/add-session', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                carId: data.carId,
                pointId: data.chargingPointId,
                timeMoment: data.timeMoment,
                chargingTime: data.chargingTime,
                energy: data.energyConsumed,
                cost: data.cost
            })
        });

        if (!sessionResponse.ok) {
            console.error("Lỗi khi gọi addSession:", await sessionResponse.text());
            return;
        }

        const session = await sessionResponse.json();
        sessionAlreadySaved = true;

        // Lưu session vào localStorage
        localStorage.setItem(sessionKey, JSON.stringify(session));

        document.getElementById('modal-start-time').textContent = new Date(session.startTime).toLocaleString();
        document.getElementById('modal-end-time').textContent = new Date(session.endTime).toLocaleString();
        document.getElementById('modal-energy').textContent = session.energyConsumed;
        document.getElementById('modal-cost').textContent = new Intl.NumberFormat('vi-VN', {
            style: 'currency',
            currency: 'VND'
        }).format(session.cost * 1000);

        new bootstrap.Modal(document.getElementById('sessionModal')).show();
    }


            document.getElementById('station-name').textContent = data.stationName || "Chưa có dữ liệu";
            document.getElementById('station-address').textContent = data.address || "Chưa có dữ liệu";
        } catch (error) {
            console.error('Lỗi khi cập nhật dữ liệu:', error);
            document.getElementById('status').textContent = "OFFLINE!";
            document.getElementById('status').className = "badge bg-secondary ms-2";
        }
    }

    updateChargingData();
</script>

<style>
    .metric-card {
        transition: transform 0.3s ease;
        border: 1px solid #dee2e6;
    }

        .metric-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

    .station-info {
        padding-left: 1.5rem;
    }
</style>
