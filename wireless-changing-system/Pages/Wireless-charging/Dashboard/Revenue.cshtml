@page
@model wireless_changing_system.Pages.Wireless_charging.Dashboard.RevenueModel
@{
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

<h4 class="mt-5">📊 Doanh thu</h4>

<div class="container mt-4">
    <!-- Filter Date -->
    <div class="row mb-4">
        <div class="col-md-3">
            <label for="startDate" class="form-label">Từ ngày</label>
            <input type="date" id="startDate" class="form-control">
        </div>
        <div class="col-md-3">
            <label for="endDate" class="form-label">Đến ngày</label>
            <input type="date" id="endDate" class="form-control">
        </div>
        <div class="col-md-3">
            <label for="stationFilter" class="form-label">Trạm sạc</label>
            <select id="stationFilter" class="form-select">
                <option value="">Tất cả các trạm</option>
                <!-- Các option trạm sẽ được load từ DB -->
            </select>
        </div>
    </div>

    <!-- Card Statistics -->
    <div class="row mb-4 text-center">
        <div class="col-md-4">
            <div class="p-3 bg-light border rounded shadow-sm">
                <h6>Tổng doanh thu</h6>
                <h5 id="totalRevenue">-- VND</h5>
            </div>
        </div>
        <div class="col-md-4">
            <div class="p-3 bg-light border rounded shadow-sm">
                <h6>Doanh thu trung bình mỗi phiên sạc</h6>
                <h5 id="avgRevenue">-- VND</h5>
            </div>
        </div>

        <div class="col-md-4">
            <div class="p-3 bg-light border rounded shadow-sm">
                <h6>Trạm có doanh thu cao nhất</h6>
                <h5 id="highestRevenueStation">--</h5>
            </div>
        </div>
    </div>

    <!-- Charts -->
    <div class="row">
        <div class="col-md-12">
            <h5 class="mb-3">Biểu đồ doanh thu theo ngày</h5>
            <canvas id="dailyRevenueChart"></canvas>
        </div>
        <div class="col-md-12 mt-4">
            <h5>Biểu đồ doanh thu theo tháng</h5>
            <canvas id="monthlyRevenueChart"></canvas>
        </div>
        <div class="col-md-12 mt-4">
            <h5>Biểu đồ doanh thu theo năm</h5>
            <canvas id="yearlyRevenueChart"></canvas>
        </div>
    </div>
</div>

<script>
    const today = new Date();
    const defaultStart = new Date(today.getFullYear(), 0, 2);
    const defaultEnd = new Date(today.getFullYear(), 11, 32);

    let dailyRevenueChart, monthlyRevenueChart, yearlyRevenueChart;

    $(document).ready(function () {
        $('#startDate').val(defaultStart.toISOString().slice(0, 10));
        $('#endDate').val(defaultEnd.toISOString().slice(0, 10));

        fetchRevenueData(defaultStart.toISOString(), defaultEnd.toISOString(), "");

        $('#startDate, #endDate, #stationFilter').on('change', function () {
            const start = new Date($('#startDate').val());
            const end = new Date($('#endDate').val());
            const stationId = $('#stationFilter').val();

            if (start && end && start <= end) {
                fetchRevenueData(start.toISOString(), end.toISOString(), stationId);
            }
        });

        $.ajax({
            url: "https://localhost:7191/api/ChargingStation?page=1&pageSize=100",
            type: "GET",
            success: function (data) {
                const stationFilter = $("#stationFilter");
                stationFilter.empty();
                stationFilter.append(`<option value="">Tất cả các trạm</option>`);

                data.data.forEach(station => {
                    stationFilter.append(`
                        <option value="${station.stationId}">${station.stationName}</option>
                    `);
                });
            },
            error: function (xhr) {
                console.error("Lỗi khi lấy danh sách trạm sạc:", xhr.responseText);
                $("#stationFilter").html(`<option disabled selected>Không thể tải danh sách trạm sạc</option>`);
            }
        });
    });

    function fetchRevenueData(start, end, stationId) {
        const url = new URL("https://localhost:7191/api/Dashboard/revenue");
        url.searchParams.append("start", start);
        url.searchParams.append("end", end);
        if (stationId) {
            url.searchParams.append("stationId", stationId);
        }

        $.ajax({
            url: url.toString(),
            type: 'GET',
            success: function (res) {
                console.log(res);
                $('#totalRevenue').text(res.totalRevenue.toFixed(2) + ' VND');
                $('#avgRevenue').text(res.avgRevenuePerSession.toFixed(2) + ' VND');
                if (res.byStation && res.byStation.length > 0) {
                    $('#highestRevenueStation').text(res.byStation[0].stationName);
                } else {
                    $('#highestRevenueStation').text("--");
                }

                renderChart('dailyRevenueChart', res.daily.map(d => d.date), res.daily.map(d => d.revenue), 'line', 'Doanh thu (VND)', 'blue', chart => dailyRevenueChart = chart);
                renderChart('monthlyRevenueChart', res.monthly.map(d => `${d.month}/${d.year}`), res.monthly.map(d => d.revenue), 'bar', 'Doanh thu (VND)', 'green', chart => monthlyRevenueChart = chart);
                renderChart('yearlyRevenueChart', res.yearly.map(d => d.year), res.yearly.map(d => d.revenue), 'bar', 'Doanh thu (VND)', 'orange', chart => yearlyRevenueChart = chart);
            }
        });
    }


    function renderChart(id, labels, data, type, label, color, storeChart) {
        if (window[id] && typeof window[id].destroy === 'function') {
            window[id].destroy();
        }

        const ctx = document.getElementById(id).getContext('2d');
        const options = {
            plugins: {
                datalabels: {
                    anchor: 'end',
                    align: 'start',
                    color: 'black',
                    font: {
                        weight: 'bold'
                    },
                    formatter: function (value) {
                        return value.toFixed(2)
                    }
                }
            }
        };

        window[id] = new Chart(ctx, {
            type,
            data: {
                labels,
                datasets: [{
                    label,
                    data,
                    borderColor: color,
                    backgroundColor: color,
                    fill: type === 'line' ? false : true
                }]
            },
            options: options,
            plugins: [ChartDataLabels]
        });
        storeChart(window[id]);
    }
</script>