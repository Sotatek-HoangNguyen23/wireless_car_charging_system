@page
@model wireless_changing_system.Pages.Wireless_charging.ChargingStation.StationListModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Charging Stations</title>
    <link rel="stylesheet" href="~/css/chargingstation/list.css">
</head>
<body>
    <div class="container">
        <div class="row">
            <h1 class="col-md-6">Trạm sạc</h1>
            <div class="station-actions col-md-6 ">
                <a id="add-station-btn" href="addstation" class="btn btn-primary btn-sm">Thêm trạm sạc</a>
            </div>         
        </div>

        <!-- Ô nhập từ khóa tìm kiếm -->
        <div class="mb-3 d-flex align-items-center">
            <input type="text" id="search-input" class="form-control me-2" placeholder="Nhập tên trạm sạc hoặc vị trí">
            <button id="search-btn" class="btn btn-primary" style="white-space: nowrap;">Tìm kiếm</button>
        </div>

        <!-- Danh sách trạm sạc -->
        <div id="station-list"></div>

        <!-- Phân trang -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center"></ul>
        </nav>
    </div>

    <!-- Modal Xác Nhận Xóa -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteConfirmLabel">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa trạm sạc này không?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        let currentPage = 1;
        const pageSize = 2;

        // Lấy vị trí hiện tại và load danh sách station
        function getLocationAndLoadStations() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const userLat = position.coords.latitude;
                    const userLng = position.coords.longitude;
                    const keyword = $("#search-input").val();

                    loadStations(userLat, userLng, keyword);
                }, error => {
                    console.error("Không thể lấy vị trí hiện tại!", error);
                    showToast("Không thể lấy vị trí hiện tại!");
                    loadStations(null, null, $("#search-input").val());
                });
            } else {
                console.error("Trình duyệt không hỗ trợ Geolocation.");
                loadStations(null, null, $("#search-input").val());
            }
        }

        // Hàm load danh sách sau khi lấy dữ liệu từ API
        function loadStations(userLat, userLng, keyword) {
            $.ajax({
                url: `https://localhost:7191/api/ChargingStation?keyword=${encodeURIComponent(keyword)}&userLat=${userLat}&userLng=${userLng}&page=${currentPage}&pageSize=${pageSize}`,
                method: "GET",
                success: function (response) {
                    renderStations(response.data);
                    updatePagination(response.totalPages);
                },
                error: function (error) {
                    console.error("Lỗi khi gọi API:", error);
                }
            });
        }

        // Tạo HTML cho từng Station
        function renderStations(stations) {
            const stationList = $("#station-list");
            stationList.empty();

            const role = sessionStorage.getItem("role");

            stations.forEach(station => {
                stationList.append(`
                    <div class="station-card">
                        <img src="https://img.canarymedia.com/content/uploads/witricity3.png?auto=compress%2Cformat&crop=focalpoint&fit=crop&fp-x=0.5&fp-y=0.5&h=501&q=80&w=864&s=8fb2e832892760cff6912e6683a67514" alt="Station Image">
                        <div class="station-info">
                            <h3>${station.stationName}</h3>
                            <p><strong>Chủ sở hữu:</strong> ${station.owner}</p>
                            <p><strong>Tổng số điểm sạc:</strong> ${station.totalPoint}</p>
                            <p><strong>Số điểm sạc còn trống:</strong> ${station.availablePoint}</p>
                            <p><strong>Địa chỉ:</strong> ${station.address}</p>
                            <p><strong>Khoảng cách đến bạn:</strong> ${station.distance ? station.distance.toFixed(2) + " km" : "N/A"}</p>
                            <p><strong>Trạng thái:</strong> ${station.status}</p>
                        </div>
                        <div class="station-actions">
                            <a href="stationdetail?stationId=${station.stationId}" class="btn btn-primary btn-sm">Thông tin chi tiết</a>
                            <button class="btn btn-warning btn-sm show-on-map" data-lat="${station.latitude}" data-lng="${station.longitude}">
                                Xem trên Google Map
                            </button>
                            ${role !== "Driver" ? `
                                <a href="updatestation?stationId=${station.stationId}" class="btn btn-info btn-sm">Cập nhật</a>
                                <a href="#" class="btn btn-danger btn-sm btn-delete" data-id="${station.stationId}">Xóa trạm</a>
                            ` : ""}
                        </div>
                    </div>
                `);
            });

            // Gán sự kiện click cho nút "Show on Map"
            $(".show-on-map").click(function () {
                const lat = $(this).data("lat");
                const lng = $(this).data("lng");
                openGoogleMaps(lat, lng);
            });
        }
        
        // Mở GG Maps
        function openGoogleMaps(lat, lng) {
            const googleMapsUrl = `https://www.google.com/maps?q=${lat},${lng}`;
            window.open(googleMapsUrl, "_blank"); // Mở Google Maps trong tab mới
        }

        // Phân trang
        function updatePagination(totalPages) {
            const pagination = $(".pagination");
            pagination.empty();

            pagination.append(`<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Trước</a>
            </li>`);

            for (let i = 1; i <= totalPages; i++) {
                pagination.append(`<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                </li>`);
            }

            pagination.append(`<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Sau</a>
            </li>`);
        }

        // Chuyển trang
        function changePage(page) {
            if (page < 1) return;
            currentPage = page;
            getLocationAndLoadStations();
        }

        // Gọi API khi nhấn nút search
        $("#search-btn").click(function () {
            currentPage = 1; // Reset về trang 1 khi tìm kiếm
            getLocationAndLoadStations();
        });

        // Gọi API khi nhấn Enter trong ô input
        $("#search-input").keypress(function (e) {
            if (e.which === 13) {
                currentPage = 1;
                getLocationAndLoadStations();
            }
        });

        // Load danh sách khi trang web mở
        $(document).ready(function () {
            getLocationAndLoadStations();
        });

        // Xóa trạm
        $(document).ready(function () {
            let stationIdToDelete = null; // Lưu ID trạm sạc cần xóa

            // Khi click vào nút Delete, mở modal và lưu ID
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                stationIdToDelete = $(this).data("id");
                $("#deleteConfirmModal").modal("show");
            });

            // Khi nhấn xác nhận xóa
            $("#confirmDeleteBtn").click(function () {
                if (!stationIdToDelete) {
                    showToast("Không tìm thấy trạm sạc để xóa!");
                    return;
                }

                $.ajax({
                    url: `https://localhost:7191/api/ChargingStation/${stationIdToDelete}`,
                    type: "DELETE",
                    success: function () {
                        $("#deleteConfirmModal").modal("hide"); // Đóng modal
                        showSuccessToast("Xóa trạm sạc thành công!");
                        setTimeout(function () {
                            location.reload(); // Làm mới danh sách
                        }, 1000);                       
                    },
                    error: function (xhr) {
                        console.error("Lỗi khi xóa:", xhr.responseText);
                        showToast("Xóa không thành công!");
                    }
                });
            });
        });

        // Phân quyền theo role
        document.addEventListener("DOMContentLoaded", function () {
            const role = sessionStorage.getItem("role");
            if (role === "Driver") {
                const addButton = document.getElementById("add-station-btn");
                    addButton.style.display = "none";
            }
        });
    </script>
</body>
</html>