@page
@model wireless_changing_system.Pages.Wireless_charging.ChargingStation.StationListModel
@{
}


<div class="container py-4">
    <div class="row mb-4">
        <h1 class="col-md-6">Trạm sạc</h1>
        <div class="col-md-6 text-md-end">
            <a id="add-station-btn" href="addstation" class="btn btn-primary btn-sm">Thêm trạm sạc</a>
        </div>
    </div>

    <!-- Search input -->
    <div class="mb-3 input-group">
        <input type="text" id="search-input" class="form-control" placeholder="Nhập tên trạm sạc hoặc vị trí">
        <button id="search-btn" class="btn btn-primary">Tìm kiếm</button>
    </div>

    <!-- Station list -->
    <div id="station-list" class="row g-4"></div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mt-4"></ul>
    </nav>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa trạm sạc này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>


<script type="module">
    import { fetchWithAuth } from '/js/apiClient.js';

    document.addEventListener("DOMContentLoaded", function () {
        let currentPage = 1;
        const pageSize = 2;

        // Phân quyền theo role
        const role = sessionStorage.getItem("role");
        if (role !== "Operator") {
            const addButton = document.getElementById("add-station-btn");
            addButton.style.display = "none";
        }
        
        $(document).ready(function () {
            getLocationAndLoadStations();

            let stationIdToDelete = null; // Lưu ID trạm sạc cần xóa

            // Form delete
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                stationIdToDelete = $(this).data("id");
                $("#deleteConfirmModal").modal("show");
            });

            // Khi nhấn xác nhận xóa
            $("#confirmDeleteBtn").click(function () {
                if (!stationIdToDelete) {
                    showToast("Không tìm thấy trạm sạc để xóa!");
                    return;
                }

                deleteStation(stationIdToDelete);
            });
        });

        // Lấy dữ liệu trạm sạc
        async function loadStations(userLat, userLng, keyword, currentPage, pageSize, currentRole) {
            try {
                let url = `https://localhost:7191/api/ChargingStation?keyword=${encodeURIComponent(keyword)}&currentRole=${currentRole}&page=${currentPage}&pageSize=${pageSize}`;

                if (userLat !== null && userLat !== undefined && userLng !== null && userLng !== undefined) {
                    url += `&userLat=${userLat}&userLng=${userLng}`;
                }

                const options = {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' }
                };

                const response = await fetchWithAuth(url, options);
                if (response.ok) {
                    const data = await response.json();
                    renderStations(data.data);
                    updatePagination(data.totalPages);
                } else {
                    console.error('Server Error:', response.status);
                }
            } catch (error) {
                console.error('Fetch error:', error);
            }
        }

        // Lấy vị trí hiện tại và load danh sách station
        function getLocationAndLoadStations() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const userLat = position.coords.latitude;
                    const userLng = position.coords.longitude;
                    const keyword = $("#search-input").val();

                    loadStations(userLat, userLng, keyword, currentPage, pageSize, role);
                }, error => {
                    console.error("Không thể lấy vị trí hiện tại!", error);
                    showToast("Không thể lấy vị trí hiện tại!");
                    loadStations(null, null, $("#search-input").val(), currentPage, pageSize, role);
                });
            } else {
                console.error("Trình duyệt không hỗ trợ Geolocation.");
                loadStations(null, null, $("#search-input").val());
            }
        }       

        // Tạo HTML cho từng Station
        function renderStations(stations) {
            const stationList = $("#station-list");
            stationList.empty();

            if (!stations || stations.length === 0) {
                stationList.html(`<p class="text-center text-muted">Không tìm thấy trạm sạc nào.</p>`);
                return;
            }

            const role = sessionStorage.getItem("role");

            stations.forEach(station => {
                stationList.append(`
                    <div class="col-12">
                        <div class="card mb-4">
                            <div class="row g-0">
                                <div class="col-md-4">
                                    <img src="https://img.canarymedia.com/content/uploads/witricity3.png?auto=compress%2Cformat&crop=focalpoint&fit=crop&fp-x=0.5&fp-y=0.5&h=501&q=80&w=864&s=8fb2e832892760cff6912e6683a67514"
                                            class="img-fluid rounded-start h-100"
                                            alt="Station Image"
                                            style="object-fit: cover;">
                                </div>
                                <div class="col-md-5">
                                    <div class="card-body">
                                        <h3 class="card-title">${station.stationName}</h3>
                                        <p class="card-text"><strong>Chủ sở hữu:</strong> ${station.owner}</p>
                                        <p class="card-text"><strong>Tổng số điểm sạc:</strong> ${station.totalPoint}</p>
                                        <p class="card-text"><strong>Số điểm sạc còn trống:</strong> ${station.availablePoint}</p>
                                        <p class="card-text"><strong>Địa chỉ:</strong> ${station.address}</p>
                                        <p class="card-text"><strong>Khoảng cách đến bạn:</strong> ${station.distance ? station.distance.toFixed(2) + " km" : "N/A"}</p>
                                        <p class="card-text"><strong>Trạng thái:</strong> ${station.status}</p>
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex flex-column justify-content-center p-3">
                                    <a href="stationdetail?stationId=${station.stationId}" class="btn btn-primary btn-sm mb-2">Thông tin chi tiết</a>
                                    <button class="btn btn-warning btn-sm mb-2 show-on-map" data-lat="${station.latitude}" data-lng="${station.longitude}">
                                        Xem trên Google Map
                                    </button>
                                    ${
                                      role === "Operator" || role === "Station Owner"
                                        ? `
                                          <a href="updatestation?stationId=${station.stationId}" class="btn btn-info btn-sm mb-2">Cập nhật</a>
                                          <a href="#" class="btn btn-danger btn-sm btn-delete" data-id="${station.stationId}">Xóa trạm</a>
                                        `
                                        : ""
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                `);
            });

            // Gán sự kiện click cho nút "Show on Map"
            $(".show-on-map").click(function () {
                const lat = $(this).data("lat");
                const lng = $(this).data("lng");
                openGoogleMaps(lat, lng);
            });
        }

        // Mở GG Maps
        function openGoogleMaps(lat, lng) {
            const googleMapsUrl = `https://www.google.com/maps?q=${lat},${lng}`;
            window.open(googleMapsUrl, "_blank"); // Mở Google Maps trong tab mới
        }

        // Phân trang
        function updatePagination(totalPages) {
            const pagination = $(".pagination");
            pagination.empty();

            pagination.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage - 1}); return false;">Trước</a>
                </li>
            `);

            // Hiển thị các trang
            const startPage = Math.max(1, currentPage - 2);
            const endPage = Math.min(totalPages, currentPage + 2);

            if (startPage > 1) {
                pagination.append('<li class="page-item disabled"><a class="page-link">...</a></li>');
            }

            for (let i = startPage; i <= endPage; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changePage(${i}); return false;">${i}</a>
                    </li>
                `);
            }

            if (endPage < totalPages) {
                pagination.append('<li class="page-item disabled"><a class="page-link">...</a></li>');
            }

            pagination.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage + 1}); return false;">Sau</a>
                </li>
            `);
        }

        // Chuyển trang
        window.changePage = function (page) {
            if (page < 1) return;
            currentPage = page;
            getLocationAndLoadStations();
        };

        // Search
        $("#search-btn").click(function () {
            currentPage = 1; // Reset về trang 1 khi tìm kiếm
            getLocationAndLoadStations();
        });

        // Gọi API khi nhấn Enter trong ô input
        $("#search-input").keypress(function (e) {
            if (e.which === 13) {
                currentPage = 1;
                getLocationAndLoadStations();
            }
        });

        
        // Xóa trạm sạc
        async function deleteStation(stationIdToDelete) {
            try {
                const url = `https://localhost:7191/api/ChargingStation/${stationIdToDelete}`;
                const options = {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                };

                const response = await fetchWithAuth(url, options);
                if (response.ok) {
                    $("#deleteConfirmModal").modal("hide"); // Đóng modal
                    showSuccessToast("Xóa trạm sạc thành công!");
                    getLocationAndLoadStations(); // Load lại danh sách sau khi xóa
                } else {
                    const errorText = await response.text();
                    console.error("Server Error:", errorText);
                    showToast("Xóa không thành công!");
                }
            } catch (error) {
                console.error("Fetch error:", error);
                showToast("Xóa không thành công!");
            }
        }

        
    });
</script>