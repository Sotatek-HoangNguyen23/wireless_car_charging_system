@page
@model wireless_changing_system.Pages.Wireless_charging.Auth.forgot_passwordModel
@{
}
<div class="container">
    <div class="forgot-card">
        <h4 class="fw-bold">Tìm Tài Khoản Của Bạn</h4>
        <p>Vui lòng nhập địa chỉ email hoặc số điện thoại để tìm kiếm tài khoản.</p>
        <form id="forgotForm">
            <div class="mb-3">
                <input id="emailInput"
                       type="email"
                       class="form-control"
                       placeholder="ví dụ: user@example.com">
            </div>
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-success w-50">Xác nhận</button>
                <a href="../" type="button" class="btn btn-dark w-50">Hủy</a>
            </div>
        </form>
    </div>
</div>

<div id="error-toast" class="custom-toast">
    <div class="toast-progress"></div>
    <i class="bi bi-exclamation-circle-fill toast-icon"></i>
    <div class="toast-content">
        <strong>Lỗi!</strong>
        <p class="mb-0">Đã xảy ra lỗi trong quá trình xử lý</p>
    </div>
</div>

<script>
    document.getElementById('forgotForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const email = document.getElementById('emailInput').value;
        const toast = document.getElementById('error-toast');

        try {
            const response = await fetch('https://localhost:7191/api/User/email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email: email })
            });

            const data = await response.json();

            if (response.ok) {
                console.log(data.email);
                window.location.href = `./Send-OTP?email=${encodeURIComponent(data.email)}&fullname=${data.fullname}`;
            } else {
                showToast(toast, data.detail || 'Đã xảy ra lỗi không xác định');
            }
        } catch (error) {
            console.error('Lỗi:', error);
            showToast(toast, 'Lỗi kết nối đến máy chủ');
        }
    });

    function showToast(toastElement, message = null) {
        if (message) {
            toastElement.querySelector('.toast-content p').textContent = message;
        }
        toastElement.classList.add('show');
        setTimeout(() => {
            toastElement.classList.remove('show');
        }, 5000);
    }
</script>