@page
@model wireless_changing_system.Pages.Wireless_charging.Auth.RegisterModel
@{
}
<style>
    input[type="password"]::-ms-reveal,
    input[type="password"]::-ms-clear {
        display: none;
    }
</style>
<div class="container d-flex flex-column justify-content-center align-items-center min-vh-100">
    <img src="~/img/logo.png" alt="Logo" class="mb-4 hide-mobile" style="max-width: 120px" />

    <div class="card p-4 shadow mobi-margin-top" style="max-width: 800px; width: 100%;">
        <h2 class="text-center mb-4">Tạo tài khoản mới</h2>
        <form id="registerForm" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-6 pe-md-3" style="margin:0px">
                    <div class="mb-3">
                        <label for="fullname" class="form-label fw-semibold">Họ và tên</label>
                        <input type="text"
                               class="form-control"
                               id="fullname"
                               name="Fullname"
                               placeholder="Họ và tên"
                               readonly
                               required>
                    </div>

                    <div class="mb-3">
                        <label for="dob" class="form-label fw-semibold">Ngày sinh</label>
                        <input type="date"
                               class="form-control"
                               id="dob"
                               name="Dob"
                               required>
                    </div>
                    <div class="mb-3">
                        <label for="cccd" class="form-label fw-semibold">Số CCCD</label>
                        <input type="text"
                               class="form-control"
                               id="cccd"
                               name="CccdCode"
                               placeholder="Nhập số CCCD"
                               minlength="9"
                               maxlength="12"
                               readonly
                               required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Giới tính:</label>
                        <div class="d-flex gap-4">
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="Gender"
                                       id="male"
                                       value="true"
                                       required
                                       readonly>
                                <label class="form-check-label" for="male">Nam</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="Gender"
                                       id="female"
                                       value="false"
                                       readonly>
                                <label class="form-check-label" for="female">Nữ</label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label fw-semibold">Địa chỉ</label>
                        <input type="text"
                               class="form-control"
                               id="address"
                               name="Address"
                               placeholder="Nhập địa chỉ"
                               required>
                    </div>

                    <div class="mb-3">
                        <label for="cccdFront" class="form-label fw-semibold">Ảnh mặt trước CCCD</label>
                        <input type="file"
                               class="form-control"
                               id="cccdFront"
                               name="CCCDFrontImage"
                               accept="image/*"
                               required
                               onchange="previewImage(this, 'cccdFrontPreview')">
                        <img id="cccdFrontPreview" class="mt-2" style="max-width: 100%; max-height: 150px; display: none;" />
                    </div>

                    <div class="mb-3">
                        <label for="cccdBack" class="form-label fw-semibold">Ảnh mặt sau CCCD</label>
                        <input type="file"
                               class="form-control"
                               id="cccdBack"
                               name="CCCDBackImage"
                               accept="image/*"
                               required
                               onchange="previewImage(this, 'cccdBackPreview')">
                        <img id="cccdBackPreview" class="mt-2" style="max-width: 100%; max-height: 150px; display: none;" />
                    </div>
                </div>

                <div class="col-md-6 ps-md-3">
                    <div class="mb-3">
                        <label for="phone" class="form-label fw-semibold">Số điện thoại</label>
                        <input type="tel"
                               class="form-control"
                               id="phone"
                               name="PhoneNumber"
                               placeholder="Nhập số điện thoại"
                               required>
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label fw-semibold">Email</label>
                        <input type="email"
                               class="form-control"
                               id="email"
                               name="Email"
                               placeholder="Nhập địa chỉ email"
                               required>
                    </div>

                    <div class="mb-3 position-relative">
                        <label for="password" class="form-label fw-semibold">Mật khẩu</label>
                        <input type="password"
                               class="form-control pe-5"
                               id="password"
                               name="PasswordHash"
                               placeholder="Nhập mật khẩu"
                               required>
                        <i class="bi bi-eye-slash toggle-password"
                           style="position: absolute; right: 15px; bottom: 10px; cursor: pointer;"></i>
                    </div>

                    <div id="password-rules-wrapper" style="display: none;">
                        <ul id="password-rules" class="password-rules-list">
                            <li id="rule-length"><i class="bi bi-x-circle rule-icon"></i> Ít nhất 6 ký tự</li>
                            <li id="rule-uppercase"><i class="bi bi-x-circle rule-icon"></i> Ít nhất 1 chữ hoa</li>
                            <li id="rule-number"><i class="bi bi-x-circle rule-icon"></i> Ít nhất 1 chữ số</li>
                            <li id="rule-special"><i class="bi bi-x-circle rule-icon"></i> Ít nhất 1 ký tự đặc biệt</li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input"
                       type="checkbox"
                       id="agreeTerms"
                       required>
                <label class="form-check-label" for="agreeTerms">
                    Tôi đồng ý với <a href="#" class="text-decoration-none">điều khoản dịch vụ</a>
                </label>
            </div>
            <button type="submit" id="regisBtn" class="btn btn-primary w-100 mb-3 fw-semibold">
                Đăng ký
            </button>

            <div class="text-center">
                <a href="/login" class="text-decoration-none">
                    Đã có tài khoản? Đăng nhập tại đây
                </a>
            </div>
        </form>
    </div>
</div>
<div id="error-toast" class="custom-toast">
    <div class="toast-progress"></div>
    <i class="bi bi-exclamation-circle-fill toast-icon"></i>
    <div class="toast-content">
        <strong>Lỗi!</strong>
        <p class="mb-0"></p>
    </div>
</div>
<div id="success-toast" class="custom-toast success-toast">
    <div class="toast-progress"></div>
    <i class="bi bi-check-circle-fill toast-icon"></i>
    <div class="toast-content">
        <strong>Thành công!</strong>
        <p class="mb-0"></p>
    </div>
</div>
<script>
    let validCCCD=false;
    let allValid = false;
    const regisBtn = document.getElementById('regisBtn');
    const agreeCheckbox = document.getElementById('agreeTerms');

    regisBtn.disabled = true;
    agreeCheckbox.addEventListener('change', (e) => {
        regisBtn.disabled = !(allValid && e.target.checked);
    });


    document.querySelector('.toggle-password').addEventListener('click', function(e) {
        const passwordInput = document.getElementById('password');
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        this.classList.toggle('bi-eye-slash');
        this.classList.toggle('bi-eye');
    });

    // Thêm validation password real-time
    document.getElementById('password').addEventListener('input', function(e) {
        const password = e.target.value;
        const rulesWrapper = document.getElementById('password-rules-wrapper');

        rulesWrapper.style.display = password.length > 0 ? 'block' : 'none';

        const isLengthValid = password.length >= 6;
        const hasUppercase = /[A-Z]/.test(password);
        const hasNumber = /\d/.test(password);
        const hasSpecial = /[!@@#$%^&*(),.?":{}|<>]/.test(password);

        updateRule('rule-length', isLengthValid);
        updateRule('rule-uppercase', hasUppercase);
        updateRule('rule-number', hasNumber);
        updateRule('rule-special', hasSpecial);

        allValid = isLengthValid && hasUppercase && hasNumber && hasSpecial;
       regisBtn.disabled =  !(allValid && agreeCheckbox.checked);
    });

    function updateRule(ruleId, isValid) {
        const ruleElement = document.getElementById(ruleId);
        const icon = ruleElement.querySelector('.rule-icon');

        if (isValid) {
            icon.classList.remove('bi-x-circle');
            icon.classList.add('bi-check-circle');
            ruleElement.classList.add('valid');
        } else {
            icon.classList.remove('bi-check-circle');
            icon.classList.add('bi-x-circle');
            ruleElement.classList.remove('valid');
        }
    }

    // Hàm preview ảnh
    function previewImage(input, previewId) {
        const preview = document.getElementById(previewId);
        const file = input.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.style.display = 'block';
                preview.src = e.target.result;
            };
            reader.readAsDataURL(file);
        } else {
            preview.style.display = 'none';
            preview.src = '';
        }
    }

    // Khi chọn ảnh CCCD Front: preview và gọi API quét QR code
    document.getElementById("cccdFront").addEventListener("change", function() {
        const fileInput = this;
        const file = fileInput.files[0];
        if (!file) return;

        // Hiển thị preview
        previewImage(fileInput, 'cccdFrontPreview');

        // Tạo FormData và thêm file
        const formData = new FormData();
        formData.append("file", file);

        // Gọi API POST /read-qr để quét QR code
        fetch("https://localhost:7191/api/Images/read-qr", {
            method: "POST",
            body: formData
        })
        .then(response => response.ok ? response.text() : Promise.reject("Lỗi server"))
        .then(result => {
            if(result.trim() === "Không tìm thấy QR code") {
                showToast("Không đọc được QR code, vui lòng gửi lại ảnh CCCD Front.");
                return;
            }

            const parts = result.split("|");
            if(parts.length >= 6) {
                document.getElementById("cccd").value = parts[0].trim();
                document.getElementById("fullname").value = parts[2].trim();

                // Chuyển định dạng ngày ddMMyyyy sang yyyy-MM-dd
                let dob = parts[3].trim();
                if(dob.length === 8) {
                    const day = dob.substring(0,2);
                    const month = dob.substring(2,4);
                    const year = dob.substring(4);
                    document.getElementById("dob").value = `${year}-${month}-${day}`;
                } else {
                    document.getElementById("dob").value = "";
                }

                const gender = parts[4].trim().toLowerCase();
                if(gender === "nam") {
                    document.getElementById("male").checked = true;
                } else if(gender === "nữ") {
                    document.getElementById("female").checked = true;
                }
                document.getElementById("address").value = parts[5].trim();
                validCCCD = true;
            } else {
                showToast("Dữ liệu QR code không hợp lệ, vui lòng gửi lại ảnh CCCD.");
            }
        })
        .catch(error => {
            console.error(error);
            showToast("Lỗi khi đọc QR code, vui lòng gửi lại ảnh CCCD.");
        });
    });
    document.getElementById("registerForm").addEventListener("submit", function(e) {
        e.preventDefault();
        const form = this;
        const formData = new FormData(form);
         const dobValue = document.getElementById('dob').value;
         const requiredFields = [
            {id: 'cccdFront', message: 'Vui lòng tải lên ảnh mặt trước CCCD'},
            {id: 'cccdBack', message: 'Vui lòng tải lên ảnh mặt sau CCCD'},
            {id: 'phone', message: 'Vui lòng nhập số điện thoại'},
            {id: 'email', message: 'Vui lòng nhập địa chỉ email'},
            {id: 'password', message: 'Vui lòng nhập mật khẩu'},
            {id: 'dob', message: 'Vui lòng chọn ngày sinh'},
            {id: 'fullname', message: 'Vui lòng kiểm tra lại thông tin từ CCCD'},
            {id: 'address', message: 'Vui lòng nhập địa chỉ'}
        ];
           requiredFields.forEach(field => {
            const element = document.getElementById(field.id);
            if (!element.value.trim() || (element.id === 'cccdFront' && !element.files[0])) {
                showToast(field.message);
                element.classList.add('invalid-field');
                isValid = false;
            }
        });

       if(!validateDOB(dobValue)) {
            return;
       }
       if(!validCCCD) {
            showToast("Vui lòng chọn ảnh CCCD và chờ đọc QR code thành công");
            return;
        }
        
        fetch("https://localhost:7191/api/auth/register", {
            method: "POST",
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(errorData => Promise.reject(errorData));
            }
            return response.text();
        })
        .then(result => {
            showSuccessToast(result);
            window.location.href = "/wireless-charging/auth";
        })
        .catch(error => {
            console.error(error);
            showToast("Đăng ký thất bại: " + (error.Error || "Lỗi không xác định"));
        });
    });
    document.getElementById("dob").addEventListener("change", function(e) {
        const dobValue = e.target.value;
        validateDOB(dobValue);
     });

    const phoneInput = document.getElementById('phone');

    phoneInput.addEventListener('blur', function(e) {
        const phone = e.target.value;
        if (phone.length > 0) {
            const isValid = validatePhone(phone);
            if (!isValid) {
                this.classList.add('invalid-field');
            } else {
                this.classList.remove('invalid-field');
            }
        }
    });

    phoneInput.addEventListener('keydown', function(e) {
        const allowedKeys = [
            'Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown',
            'Delete', 'Tab', 'Home', 'End'
        ];
        if (allowedKeys.indexOf(e.key) !== -1) {
            return;
        }

        // Nếu ô input rỗng và phím nhập là dấu '+' cho phép
        if (this.value.length === 0 && e.key === '+') {
            return;
        }

        if (!/^\d$/.test(e.key)) {
            e.preventDefault();
        }
    });

    function validatePhone(phone) {
        const regex = /^(0|\+84)(3[2-9]|5[2689]|7[06-9]|8[1-9]|9[0-9])\d{7}$/;
        if (!regex.test(phone)) {
            showToast("Số điện thoại không hợp lệ. Ví dụ: 0912345678 hoặc +84981234567");
            return false;
        }
        return true;
    }


    function validateDOB(dobString) {
        const dob = new Date(dobString);
        const today = new Date();
        const minAgeDate = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());

        if(dob > today) {
            showToast("Ngày sinh không thể là ngày trong tương lai");
            return false;
        }

        // Kiểm tra đủ 18 tuổi
        if(dob >= minAgeDate) {
            showToast("Bạn phải đủ 18 tuổi để đăng ký");
            return false;
        }

        return true;
    }

    function showSuccessToast(message) {
        const toast = document.getElementById('success-toast');
        toast.querySelector('.toast-content p').textContent = message;
        toast.classList.add('show');
        setTimeout(() => toast.classList.remove('show'), 5000);
    }
    function showToast(message) {
        const toast = document.getElementById('error-toast');
        toast.querySelector('.toast-content p').textContent = message;
        toast.classList.add('show');
        setTimeout(() => toast.classList.remove('show'), 5000);
    }
</script>
